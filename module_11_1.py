from PIL import Image
import glob, os
import numpy as np
import pandas as pd
from PIL.Image import composite

'''
pillow - обработать изображение, например, изменить его размер, применить эффекты и сохранить в другой формат.
Библиотека изображений Python добавляет возможности обработки изображений в интерпретатор Python.
Эта библиотека обеспечивает обширную поддержку форматов файлов, эффективное внутреннее представление и довольно мощные возможности обработки изображений.
Основная библиотека изображений предназначена для быстрого доступа к данным, хранящимся в нескольких основных пиксельных форматах.
 Он должен обеспечить прочную основу для общего инструмента обработки изображений.
 !Библиотека для работы с фотографиями в python!
 примеры методов работы:
 1)поворот фотографии на n градусов 
 2)изменение разрешение фотографии 
 3)наложение друг на друга фотографий
'''
#1
with Image.open("123.jpg") as im:
    im.rotate(45).show()
#2
size = 128, 128
for infile in glob.glob("234.jpg"):
    file, ext = os.path.splitext(infile)
    with Image.open(infile) as im:
        im.thumbnail(size)
        im.save(file + ".new", "JPEG")
#3
a = Image.open("234.jpg")
b = Image.open("345.jpg")
a.paste(b)
a.save("234_345.jpg")
"""
pandas - считать данные из файла, выполнить простой анализ данных (на своё усмотрение) и вывести результаты в консоль.
предназначена для анализа и обработки табличных данных в языке Python.Также она позволяет группировать данные по определённым признакам,
создавать сводные таблицы из нескольких значений,
очищать данные от дубликатов , выводить определённые значения по фильтрам.
NumPy — это библиотека Python, которая упрощает работу с массивами данных. 
Массивы — это большие наборы чисел, которые часто используются в науке, аналитике и разработке.
NumPy позволяет выполнять с этими данными сложные математические операции быстрее, 
чем со стандартными инструментами Python.
1)cоздание Pandas DataFrame
2)создание массива вручную
3)создание многомерных массивов и возможность их видоизменять 
"""
#1
data = {'name': ['danil', 'denis', 'dima'],
        'year': ['2003', '2004', '2005'],
        'day': ['1', '2', '3']
        }
df = pd.DataFrame(data, index=['1', '2', '3'])
print(df)
#2
import numpy as np
arr = np.array([1, 2, 3, 4, 5])
print(arr)
#3
x = np.arange(30)
y = x.reshape(3, 10)
z = x.reshape(2, 5, 3)
print("y", y)
print("z", z)
